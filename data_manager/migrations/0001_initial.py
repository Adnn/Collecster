# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-07 15:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=180)),
                ('value_type', models.CharField(choices=[('RTN', 'Rating'), ('PRS', 'Presence')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='AttributeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('common_name', models.CharField(blank=True, max_length=60)),
                ('distinctive_name', models.CharField(max_length=180, unique=True)),
                ('primary_nature', models.CharField(choices=[('CONSOLE', 'Console'), ('Accessory', (('GUN', 'Gun'),)), ('Software', (('GAME', 'Game'), ('DEMO', 'Demo')))], max_length=7)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptNature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('CONSOLE', 'Console'), ('Accessory', (('GUN', 'Gun'),)), ('Software', (('GAME', 'Game'), ('DEMO', 'Demo')))], max_length=7)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_nature_set', to='data_manager.Concept')),
            ],
        ),
        migrations.CreateModel(
            name='Console',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_modded', models.BooleanField()),
                ('copy_modded', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_number', models.PositiveIntegerField(blank=True, null=True)),
                ('games_playable', models.ManyToManyField(blank=True, related_name='playable_demo_set', to='data_manager.Concept')),
                ('games_video', models.ManyToManyField(blank=True, related_name='video_demo_set', to='data_manager.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.CharField(blank=True, max_length=256)),
                ('blister', models.BooleanField(help_text='Indicates whether a blister is still present.')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('lastmodif_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data_manager.Occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='OccurrenceCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Operational',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('immaterial', models.BooleanField(default=False)),
                ('loose', models.BooleanField()),
                ('version', models.CharField(blank=True, max_length=20)),
                ('barcode', models.CharField(blank=True, max_length=20)),
                ('name', models.CharField(blank=True, max_length=180, verbose_name="Release's name")),
                ('partial_date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('partial_date_precision', models.CharField(blank=True, choices=[('DD', 'Day'), ('MM', 'Month'), ('YYYY', 'Year')], default='DD', max_length=4, verbose_name='Date precision')),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, help_text='Distinctive remark if the attribute is repeated.', max_length=60)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Attribute')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='data_manager.Release')),
                ('to_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=180)),
                ('value_type', models.CharField(choices=[('RTN', 'Rating'), ('PRS', 'Presence')], max_length=3)),
                ('note', models.CharField(blank=True, help_text='Distinctive remark if the attribute is repeated.', max_length=60, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.AttributeCategory')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release')),
            ],
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_label', models.CharField(blank=True, max_length=120, verbose_name='Released in collection')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagToOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_occurrence_id', models.IntegerField()),
                ('occurrence', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Occurrence')),
            ],
        ),
        migrations.CreateModel(
            name='UserExtension',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('guid', models.IntegerField(unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='tagtooccurrence',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.UserExtension'),
        ),
        migrations.AddField(
            model_name='release',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.UserExtension'),
        ),
        migrations.AddField(
            model_name='release',
            name='nested_releases',
            field=models.ManyToManyField(through='data_manager.ReleaseComposition', to='data_manager.Release'),
        ),
        migrations.AddField(
            model_name='occurrencecustomattribute',
            name='release_corresponding_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.ReleaseCustomAttribute'),
        ),
        migrations.AddField(
            model_name='occurrencecomposition',
            name='release_composition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.ReleaseComposition'),
        ),
        migrations.AddField(
            model_name='occurrencecomposition',
            name='to_occurrence',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_composition', to='data_manager.Occurrence'),
        ),
        migrations.AddField(
            model_name='occurrenceattribute',
            name='release_corresponding_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.ReleaseAttribute'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.UserExtension'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='nested_occurrences',
            field=models.ManyToManyField(through='data_manager.OccurrenceComposition', to='data_manager.Occurrence'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release'),
        ),
        migrations.AddField(
            model_name='memory',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release'),
        ),
        migrations.AddField(
            model_name='hardware',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release'),
        ),
        migrations.AddField(
            model_name='demo',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Release'),
        ),
        migrations.AddField(
            model_name='console',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.Occurrence'),
        ),
        migrations.AddField(
            model_name='concept',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.UserExtension'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_manager.AttributeCategory'),
        ),
        migrations.AlterUniqueTogether(
            name='tagtooccurrence',
            unique_together=set([('user', 'tag_occurrence_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='releasecustomattribute',
            unique_together=set([('release', 'note')]),
        ),
        migrations.AlterUniqueTogether(
            name='releaseattribute',
            unique_together=set([('release', 'attribute', 'note')]),
        ),
        migrations.AlterUniqueTogether(
            name='occurrencecustomattribute',
            unique_together=set([('occurrence', 'release_corresponding_entry')]),
        ),
        migrations.AlterUniqueTogether(
            name='occurrencecomposition',
            unique_together=set([('release_composition', 'from_occurrence')]),
        ),
        migrations.AlterUniqueTogether(
            name='occurrenceattribute',
            unique_together=set([('occurrence', 'release_corresponding_entry')]),
        ),
        migrations.AlterUniqueTogether(
            name='conceptnature',
            unique_together=set([('concept', 'nature')]),
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together=set([('category', 'name')]),
        ),
    ]
