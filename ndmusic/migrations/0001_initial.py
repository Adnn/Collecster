# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-04-01 09:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supervisor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=180)),
                ('value_type', models.CharField(choices=[('RTN', 'Rating'), ('PRS', 'Presence')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Attribute categories',
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distinctive_name', models.CharField(max_length=180)),
                ('common_name', models.CharField(blank=True, max_length=60)),
                ('primary_nature', models.CharField(choices=[('REC', 'Record')], default='REC', max_length=6)),
                ('discogs_mrelease_code', models.CharField(blank=True, max_length=60)),
                ('year', models.DecimalField(decimal_places=0, max_digits=4, null=True)),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Artist')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ndmusic_concept_created_set', to='supervisor.UserExtension')),
            ],
        ),
        migrations.CreateModel(
            name='Distinction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('note', models.CharField(blank=True, help_text='Optional details about the meaning of this distinction.', max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('lastmodif_date', models.DateTimeField(auto_now=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ndmusic_occurrence_created_set', to='supervisor.UserExtension')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ndmusic.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=180, verbose_name="Release's name")),
                ('partial_date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('partial_date_precision', models.CharField(blank=True, choices=[('DD', 'Day'), ('MM', 'Month'), ('YYYY', 'Year')], default='DD', max_length=4, verbose_name='Date precision')),
                ('barcode', models.CharField(blank=True, max_length=20)),
                ('number', models.CharField(blank=True, max_length=40)),
                ('country', models.CharField(blank=True, choices=[('CH', 'Switzerland'), ('UK', 'UK'), ('IE', 'Ireland'), ('Asia', (('CN', 'China'), ('KR', 'Korea'), ('JP', 'Japan'))), ('Europe', (('LT', 'Lithuania'), ('BE', 'Belgium'), ('FR', 'France'), ('DE', 'Germany'), ('IT', 'Italy'), ('NL', 'Netherlands'), ('PT', 'Portugal'), ('ES', 'Spain'))), ('America', (('US', 'USA'), ('CA', 'Canada'), ('BR', 'Brazil'))), ('Maghreb', (('DZ', 'Algeria'), ('MA', 'Morocco'), ('TN', 'Tunisia')))], max_length=2)),
                ('support', models.CharField(choices=[('Vinyl', (('VI_STD', 'Standard'), ('VI_180', 'Audiophile'))), ('CD', (('CD_STD', 'Standard'), ('CD_SHM', 'SHM-CD')))], max_length=6)),
                ('type', models.CharField(choices=[('SG', 'Single'), ('EP', 'EP'), ('LP', 'LP')], max_length=2)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Concept')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ndmusic_release_created_set', to='supervisor.UserExtension')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, help_text='Distinctive remark if the attribute is repeated.', max_length=60)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Attribute')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='ndmusic.Release')),
                ('to_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=180)),
                ('value_type', models.CharField(choices=[('RTN', 'Rating'), ('PRS', 'Presence')], max_length=3)),
                ('note', models.CharField(blank=True, help_text='Distinctive remark if the attribute is repeated.', max_length=60, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.AttributeCategory')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseDistinction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=30)),
                ('distinction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Distinction')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagToOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_occurrence_id', models.IntegerField()),
                ('occurrence', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Occurrence')),
                ('user_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ndmusic_tagtooccurrence_set', to='supervisor.UserExtension')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='release',
            name='distinctions',
            field=models.ManyToManyField(through='ndmusic.ReleaseDistinction', to='ndmusic.Distinction'),
        ),
        migrations.AddField(
            model_name='release',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Label'),
        ),
        migrations.AddField(
            model_name='release',
            name='nested_releases',
            field=models.ManyToManyField(through='ndmusic.ReleaseComposition', to='ndmusic.Release'),
        ),
        migrations.AddField(
            model_name='occurrencecustomattribute',
            name='release_corresponding_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.ReleaseCustomAttribute'),
        ),
        migrations.AddField(
            model_name='occurrencecomposition',
            name='release_composition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.ReleaseComposition'),
        ),
        migrations.AddField(
            model_name='occurrencecomposition',
            name='to_occurrence',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_composition', to='ndmusic.Occurrence'),
        ),
        migrations.AddField(
            model_name='occurrenceattribute',
            name='release_corresponding_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.ReleaseAttribute'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='nested_occurrences',
            field=models.ManyToManyField(through='ndmusic.OccurrenceComposition', to='ndmusic.Occurrence'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ndmusic_occurrence_owned_set', to='supervisor.Person'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.Release'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ndmusic.AttributeCategory'),
        ),
        migrations.AlterUniqueTogether(
            name='tagtooccurrence',
            unique_together=set([('user_creator', 'user_occurrence_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='releasecustomattribute',
            unique_together=set([('category', 'name', 'release', 'note')]),
        ),
        migrations.AlterUniqueTogether(
            name='releaseattribute',
            unique_together=set([('release', 'attribute', 'note')]),
        ),
        migrations.AlterUniqueTogether(
            name='occurrencecomposition',
            unique_together=set([('release_composition', 'from_occurrence')]),
        ),
        migrations.AlterUniqueTogether(
            name='concept',
            unique_together=set([('distinctive_name', 'year')]),
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together=set([('category', 'name')]),
        ),
    ]
