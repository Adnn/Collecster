# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-02-12 11:00
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supervisor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wireless', models.BooleanField()),
                ('force_feedback', models.BooleanField()),
                ('rumble_feedback', models.BooleanField()),
                ('autofire', models.BooleanField()),
                ('slow', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=180)),
                ('value_type', models.CharField(choices=[('RTN', 'Rating'), ('PRS', 'Presence')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'Attribute categories',
            },
        ),
        migrations.CreateModel(
            name='BaseSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="eg. 'Mega Drive', 'NES', ...", max_length=30, unique=True)),
                ('generation', models.DecimalField(decimal_places=0, max_digits=2)),
                ('destination', models.CharField(choices=[('A', 'Arcade'), ('H', 'Home entertainment')], max_length=1)),
                ('abbreviated_name', models.CharField(help_text='Abbreviated name for the system, independently of any interface.', max_length=5, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BatteryType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_date', models.DateField()),
                ('note', models.CharField(blank=True, max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='BundleComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_new', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Combo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('is_individual', models.BooleanField(default=False, verbose_name='Is it a single person name ?')),
            ],
            options={
                'verbose_name_plural': 'Companies',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='CompanyService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distinctive_name', models.CharField(max_length=180)),
                ('common_name', models.CharField(blank=True, max_length=60)),
                ('primary_nature', models.CharField(choices=[('CONSOLE', 'Console'), ('Software', (('GAME', 'Game'), ('DEMO', 'Demo'))), ('Accessory', (('GUN', 'Gun'), ('PAD', 'Pad')))], max_length=7)),
                ('url', models.URLField(blank=True)),
                ('year', models.DecimalField(blank=True, decimal_places=0, max_digits=4, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advideogame_concept_created_set', to='supervisor.UserExtension')),
                ('developer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptNature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('CONSOLE', 'Console'), ('Software', (('GAME', 'Game'), ('DEMO', 'Demo'))), ('Accessory', (('GUN', 'Gun'), ('PAD', 'Pad')))], max_length=7)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_nature_set', to='advideogame.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Console',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('console_on_chip', models.BooleanField(default=False, help_text='Is this a (re-)implementation of a system on a single chip ?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsoleOcc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_modded', models.BooleanField()),
                ('copy_modded', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_number', models.PositiveIntegerField(blank=True, null=True)),
                ('games_playable', models.ManyToManyField(blank=True, related_name='playable_demo_set', to='advideogame.Concept')),
                ('games_video', models.ManyToManyField(blank=True, related_name='video_demo_set', to='advideogame.Concept')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectionalController',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Distinction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('note', models.CharField(blank=True, help_text='Optional details about the meaning of this distinction.', max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hardware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wireless', models.BooleanField(default=False)),
                ('battery_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.BatteryType')),
                ('color', models.ManyToManyField(to='advideogame.Color')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.Company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InputType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('CH', 'Switzerland'), ('UK', 'UK'), ('IE', 'Ireland'), ('Asia', (('CN', 'China'), ('KR', 'Korea'), ('JP', 'Japan'))), ('Europe', (('LT', 'Lithuania'), ('BE', 'Belgium'), ('FR', 'France'), ('DE', 'Germany'), ('IT', 'Italy'), ('NL', 'Netherlands'), ('PT', 'Portugal'), ('ES', 'Spain'))), ('America', (('US', 'USA'), ('CA', 'Canada'), ('BR', 'Brazil'))), ('Maghreb', (('DZ', 'Algeria'), ('MA', 'Morocco'), ('TN', 'Tunisia')))], max_length=2)),
                ('city', models.CharField(blank=True, max_length=60)),
                ('post_code', models.CharField(blank=True, max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='LockoutRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=10)),
                ('note', models.CharField(max_length=60)),
                ('limit_scope', models.ManyToManyField(blank=True, help_text='When specified, this lockout will be limited to the selected systems.', to='advideogame.BaseSystem')),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_date', models.DateTimeField(auto_now_add=True)),
                ('lastmodif_date', models.DateTimeField(auto_now=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('origin', models.CharField(choices=[('OR', 'Original'), ('BU', 'Buy usage'), ('BC', 'Buy collection'), ('BA', 'Buy back'), ('GF', 'Gift')], max_length=2)),
                ('blister', models.BooleanField(help_text='Indicates whether a blister is still present.')),
                ('note', models.CharField(blank=True, max_length=256)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advideogame_occurrence_created_set', to='supervisor.UserExtension')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='advideogame.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OccurrenceCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OperationalOcc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('working_condition', models.CharField(choices=[('?', 'N/A'), ('Y', 'Yes'), ('N', 'No')], default='?', max_length=1)),
                ('occurrence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Occurrence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProvidedInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardinality', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseContext',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Online', (('NET', 'e-shop'), ('ADS', 'Advertisements'))), ('SHP', 'Shop'), ('SEC', 'Secondhand sale'), ('WOM', 'Word of mouth')], max_length=3)),
                ('name', models.CharField(max_length=60)),
                ('address_complement', models.CharField(blank=True, max_length=60)),
                ('url', models.URLField(blank=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=180, verbose_name="Release's name")),
                ('partial_date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('partial_date_precision', models.CharField(blank=True, choices=[('DD', 'Day'), ('MM', 'Month'), ('YYYY', 'Year')], default='DD', max_length=4, verbose_name='Date precision')),
                ('immaterial', models.BooleanField(default=False)),
                ('url', models.URLField(blank=True)),
                ('loose', models.BooleanField()),
                ('barcode', models.CharField(blank=True, max_length=20)),
                ('version', models.CharField(blank=True, max_length=20)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Concept')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advideogame_release_created_set', to='supervisor.UserExtension')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, help_text='Distinctive remark if the attribute is repeated.', max_length=60)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Attribute')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseComposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='advideogame.Release')),
                ('to_release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseCustomAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.CharField(blank=True, max_length=180)),
                ('value_type', models.CharField(choices=[('RTN', 'Rating'), ('PRS', 'Presence')], max_length=3)),
                ('note', models.CharField(blank=True, help_text='Distinctive remark if the attribute is repeated.', max_length=60, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.AttributeCategory')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseDistinction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=30)),
                ('distinction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Distinction')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReleaseRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, unique=True)),
                ('detail', models.CharField(blank=True, max_length=20)),
                ('parent_region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.ReleaseRegion')),
            ],
        ),
        migrations.CreateModel(
            name='RequiredInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardinality', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_label', models.CharField(blank=True, max_length=120, verbose_name='Released in collection')),
                ('porter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ported_software_set', to='advideogame.Company', verbose_name='Company realizing the port')),
                ('publisher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='published_software_set', to='advideogame.Company')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('symbol', models.CharField(blank=True, max_length=5)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.Company')),
            ],
        ),
        migrations.CreateModel(
            name='SystemInterfaceDescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='SystemMediaPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.CharField(max_length=10)),
                ('wireless', models.BooleanField(default=False)),
                ('abbreviated_name', models.CharField(max_length=10, unique=True)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.BaseSystem')),
            ],
        ),
        migrations.CreateModel(
            name='SystemSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bios_version', models.CharField(blank=True, max_length=10)),
                ('interface_description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.SystemInterfaceDescription')),
                ('regional_lockout', models.ManyToManyField(to='advideogame.LockoutRegion')),
            ],
        ),
        migrations.CreateModel(
            name='TagRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The value printed on the occurrence tag.', max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagToOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_occurrence_id', models.IntegerField()),
                ('occurrence', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Occurrence')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advideogame_tagtooccurrence_set', to='supervisor.UserExtension')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('bundle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='advideogame.Bundle')),
                ('donator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervisor.Person')),
            ],
            bases=('advideogame.bundle',),
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('bundle_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='advideogame.Bundle')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('retrieval', models.CharField(blank=True, choices=[('P', 'Local pickup'), ('M', 'Shipped')], max_length=1)),
                ('address_complement', models.CharField(blank=True, max_length=60)),
                ('context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.PurchaseContext')),
            ],
            bases=('advideogame.bundle',),
        ),
        migrations.AddField(
            model_name='systeminterfacedescription',
            name='provides',
            field=models.ManyToManyField(related_name='provided_to_set', through='advideogame.ProvidedInterface', to='advideogame.SystemMediaPair'),
        ),
        migrations.AddField(
            model_name='systeminterfacedescription',
            name='reference_system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.BaseSystem'),
        ),
        migrations.AddField(
            model_name='systeminterfacedescription',
            name='requires',
            field=models.ManyToManyField(related_name='required_by_set', through='advideogame.RequiredInterface', to='advideogame.SystemMediaPair'),
        ),
        migrations.AddField(
            model_name='requiredinterface',
            name='interface',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.SystemMediaPair'),
        ),
        migrations.AddField(
            model_name='requiredinterface',
            name='regional_lockout_override',
            field=models.ManyToManyField(blank=True, to='advideogame.LockoutRegion'),
        ),
        migrations.AddField(
            model_name='requiredinterface',
            name='specification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.SystemInterfaceDescription'),
        ),
        migrations.AddField(
            model_name='releaseregion',
            name='tag_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.TagRegion'),
        ),
        migrations.AddField(
            model_name='release',
            name='distinctions',
            field=models.ManyToManyField(through='advideogame.ReleaseDistinction', to='advideogame.Distinction'),
        ),
        migrations.AddField(
            model_name='release',
            name='nested_releases',
            field=models.ManyToManyField(through='advideogame.ReleaseComposition', to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='release',
            name='release_regions',
            field=models.ManyToManyField(to='advideogame.ReleaseRegion'),
        ),
        migrations.AddField(
            model_name='release',
            name='system_specification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.SystemSpecification'),
        ),
        migrations.AddField(
            model_name='providedinterface',
            name='interface',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.SystemMediaPair'),
        ),
        migrations.AddField(
            model_name='providedinterface',
            name='regional_lockout_override',
            field=models.ManyToManyField(blank=True, to='advideogame.LockoutRegion'),
        ),
        migrations.AddField(
            model_name='providedinterface',
            name='specification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.SystemInterfaceDescription'),
        ),
        migrations.AddField(
            model_name='occurrencecustomattribute',
            name='release_corresponding_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.ReleaseCustomAttribute'),
        ),
        migrations.AddField(
            model_name='occurrencecomposition',
            name='release_composition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.ReleaseComposition'),
        ),
        migrations.AddField(
            model_name='occurrencecomposition',
            name='to_occurrence',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='occurrence_composition', to='advideogame.Occurrence'),
        ),
        migrations.AddField(
            model_name='occurrenceattribute',
            name='release_corresponding_entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.ReleaseAttribute'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='nested_occurrences',
            field=models.ManyToManyField(through='advideogame.OccurrenceComposition', to='advideogame.Occurrence'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advideogame_occurrence_owned_set', to='supervisor.Person'),
        ),
        migrations.AddField(
            model_name='occurrence',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='memory',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='memory',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.StorageUnit'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('country', 'city', 'post_code')]),
        ),
        migrations.AddField(
            model_name='hardware',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='directionalcontroller',
            name='direction_input_type',
            field=models.ManyToManyField(to='advideogame.InputType'),
        ),
        migrations.AddField(
            model_name='directionalcontroller',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='demo',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='consoleocc',
            name='occurrence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Occurrence'),
        ),
        migrations.AddField(
            model_name='console',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='concept',
            name='name_scope_restriction',
            field=models.ManyToManyField(blank=True, to='advideogame.ReleaseRegion'),
        ),
        migrations.AddField(
            model_name='company',
            name='services',
            field=models.ManyToManyField(to='advideogame.CompanyService'),
        ),
        migrations.AddField(
            model_name='combo',
            name='brand',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.Company'),
        ),
        migrations.AddField(
            model_name='combo',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AddField(
            model_name='bundlecomposition',
            name='bundle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Bundle'),
        ),
        migrations.AddField(
            model_name='bundlecomposition',
            name='occurrence',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Occurrence'),
        ),
        migrations.AddField(
            model_name='basesystem',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Company'),
        ),
        migrations.AddField(
            model_name='basesystem',
            name='upgrade_for',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.BaseSystem'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.AttributeCategory'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='release',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='advideogame.Release'),
        ),
        migrations.AlterUniqueTogether(
            name='tagtooccurrence',
            unique_together=set([('user', 'user_occurrence_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='systemmediapair',
            unique_together=set([('system', 'media')]),
        ),
        migrations.AlterUniqueTogether(
            name='systeminterfacedescription',
            unique_together=set([('reference_system', 'internal_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='storageunit',
            unique_together=set([('name', 'brand')]),
        ),
        migrations.AlterUniqueTogether(
            name='releasecustomattribute',
            unique_together=set([('release', 'note')]),
        ),
        migrations.AlterUniqueTogether(
            name='releaseattribute',
            unique_together=set([('release', 'attribute', 'note')]),
        ),
        migrations.AddField(
            model_name='purchase',
            name='location',
            field=models.ForeignKey(blank=True, help_text='The location the object shipped from, or the pickup location.', null=True, on_delete=django.db.models.deletion.CASCADE, to='advideogame.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='occurrencecomposition',
            unique_together=set([('release_composition', 'from_occurrence')]),
        ),
        migrations.AlterUniqueTogether(
            name='conceptnature',
            unique_together=set([('concept', 'nature')]),
        ),
        migrations.AlterUniqueTogether(
            name='attribute',
            unique_together=set([('category', 'name')]),
        ),
    ]
